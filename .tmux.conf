###############################################################################
# Visual Layout
###############################################################################

set-option -g xterm-keys on

# 256 color
set -g default-terminal "screen-256color"

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-style bg=colour235,fg=colour136,default #base02

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default,dim #base0

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default,bright #orange

# pane border
set -g pane-border-style fg=default
set -g pane-active-border-style fg=green,bg=default

# message text
set-option -g message-style bg=colour235,fg=colour166 #base02

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# status bar
set -g status-interval 2
set -g status-justify centre # center align window list
set -g status-left-length 50
set -g status-right-length 140
set -g status-left '#[fg=green]#H #[fg=black]• #[default]'
set -g status-right '#[bright]#[fg=red,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
# set -g status-right '#[bright]#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a %l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

###############################################################################
# Key Bindings
###############################################################################

# Use [C-a] as prefix
# set-option -g prefix C-a
# bind-key C-b last-window

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
# bind-key a send-prefix

# split panes using | and -
bind | split-window -h
bind - split-window -v

# Arrow/hjkl keys to switch between panes/windows
bind Left select-pane -L
bind Down select-pane -D
bind Up select-pane -U
bind Right select-pane -R
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind h select-pane -L

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# resize panes without prefix
bind -n S-M-left resize-pane -L 2
bind -n S-M-right resize-pane -R 2
bind -n S-M-up resize-pane -U 2
bind -n S-M-Down resize-pane -D 2

# remap binding for switching and swapping windows
bind -n S-left prev
bind -n S-right next
bind -n S-C-left swap-window -t -1
bind -n S-C-right swap-window -t +1

# reload configuration
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

set-environment -g 'IGNOREEOF' 2

###############################################################################
# Miscellaneous
###############################################################################

# mouse mode
set -g mouse on
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.1" | bc) -eq 1 ]' \
    'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on'
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.1" | bc) -eq 1 ]' \
    'set -g mouse on'
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.2" | bc) -eq 1 ]' \
    'set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on'

# clock
set-window-option -g clock-mode-colour green #green
set-window-option -g clock-mode-style 12 #12 hour clock

# Start numbering at 1
set-option -g base-index 1
setw -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

# Copy mode vi bindings
set-window-option -g mode-keys vi

#      # Use vi-style V to visual-line select
#      # Use vi-style C-v to toggle visual-block select
#      # Use vi-style y to yank/copy selection
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.2" | bc) -eq 1 ]' \
    "bind-key -t vi-copy 'v' begin-selection; bind-key -t vi-copy 'C-v' rectangle-toggle; bind-key -t vi-copy 'y' copy-pipe 'xclip-in-selection clipboard'"
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.2" | bc) -eq 1 ]' \
    "bind-key -T copy-mode-vi 'v' send-keys -X begin-selection"

# Fix clipboard to work with macOS

if-shell -b '[ $OS == "mac" ]' "set-option -g default-command 'reattach-to-user-namespace -l $SHELL'"

# Activity monitoring
set-window-option -g monitor-activity on
set -g visual-activity off
set -g visual-bell off

# Auto window rename
set-window-option -g automatic-rename on
set-option -g allow-rename off

# Constrain window size to the maximum size of any client connected to the window
set-window-option -g aggressive-resize on

# Auto window renumber
set-option -g renumber-windows on

# Shell
set-option -g default-shell "$SHELL"

###############################################################################
# Plugins
###############################################################################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

# Tmux resurrect settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

