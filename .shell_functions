# Compile and execute simple java program in one command
jcar() {
    javac "$1" && java "$(basename "$1" .java)" "${@:2}" && \rm "$(basename "$1" .java).class"
}

# Compile and execute simple java program in one command
gcar() {
    g++ -std=c++14 -Wall -Wextra -Wpedantic -Wno-sign-compare "$1" && ./a.out "${@:2}" && \rm a.out
}


# fe [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fe() {
      local files
        IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
          [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}


unalias z 2> /dev/null
z() {
      [ $# -gt 0 ] && _z "$*" && return
        cd "$(_z -l 2>&1 | fzf --height 40% --reverse --inline-info +s --tac --query "$*" | sed 's/^[0-9,.]* *//')"
}


# fh - repeat history
fh() {
  ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -re 's/^\s*[0-9]+\s*//' | perl -e 'ioctl STDOUT, 0x5412, $_ for split //, <>'
}

# fd - cd to selected directory
# fd() {
#   local dir
#   dir=$(find ${1:-.} -path '*/\.*' -prune \
#                   -o -type d -print 2> /dev/null | fzf +m) &&
#   cd "$dir"
# }

# tree respecting gitignore
tree-git-ignore() {
    local ignored=$(git ls-files -ci --others --directory --exclude-standard)
    local ignored_filter=$(echo "$ignored" \
                    | egrep -v "^#.*$|^[[:space:]]*$" \
                    | sed 's~^/~~' \
                    | sed 's~/$~~' \
                    | tr "\\n" "|")
    tree --prune -I ".git|${ignored_filter: : -1}" "$@"
}
